<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-19
 * Time: 08:26 PM
 * Auto-generated by "generate.filters.php"
 * @package Sherlock\components\filters
 */
namespace Sherlock\components\filters;

use Sherlock\components;

/**
 * @method \Sherlock\components\filters\GeoBoundingBox top_left_lat() top_left_lat(\float $value)
 * @method \Sherlock\components\filters\GeoBoundingBox top_left_lon() top_left_lon(\float $value)
 * @method \Sherlock\components\filters\GeoBoundingBox bottom_right_lat() bottom_right_lat(\float $value)
 * @method \Sherlock\components\filters\GeoBoundingBox bottom_right_lon() bottom_right_lon(\float $value)
 * @method \Sherlock\components\filters\GeoBoundingBox type() type(\string $value) Default: "memory"
 * @method \Sherlock\components\filters\GeoBoundingBox field() field(\float $value) Default: pin.location
 * @method \Sherlock\components\filters\GeoBoundingBox _cache() _cache(\bool $value) Default: false

 */
class GeoBoundingBox extends \Sherlock\components\BaseComponent implements \Sherlock\components\FilterInterface
{
    public function __construct($hashMap = null)
    {
        $this->params['type']   = "memory";
        $this->params['_cache'] = false;
        $this->params['field'] = 'pin.location';

        parent::__construct($hashMap);
    }


    public function toArray()
    {
        $ret = array(
            'geo_bounding_box' =>
            array(
                $this->params["field"] =>
                array(
                    'top_left'     =>
                    array(
                        'lat' => $this->params["top_left_lat"],
                        'lon' => $this->params["top_left_lon"],
                    ),
                    'bottom_right' =>
                    array(
                        'lat' => $this->params["bottom_right_lat"],
                        'lon' => $this->params["bottom_right_lon"],
                    ),
                ),
                'type'         => $this->params["type"],
                '_cache'       => $this->params["_cache"],
            ),
        );

        return $ret;
    }

}
