<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:24 PM
 * Auto-generated by "generate.php"
 * @package Sherlock\components\queries
 */
namespace Sherlock\components\queries;

use Sherlock\components;

/**
 * @method \Sherlock\components\queries\FuzzyLikeThisField field() field(\string $value)
 * @method \Sherlock\components\queries\FuzzyLikeThisField like_text() like_text(\string $value)
 * @method \Sherlock\components\queries\FuzzyLikeThisField max_query_terms() max_query_terms(\int $value) Default: 10
 * @method \Sherlock\components\queries\FuzzyLikeThisField min_similarity() min_similarity(\float $value) Default: 0.5
 * @method \Sherlock\components\queries\FuzzyLikeThisField prefix_length() prefix_length(\int $value) Default: 3
 * @method \Sherlock\components\queries\FuzzyLikeThisField boost() boost(\float $value) Default: 2.0
 * @method \Sherlock\components\queries\FuzzyLikeThisField analyzer() analyzer(\string $value) Default: "default"
 * @method \Sherlock\components\queries\FuzzyLikeThisField ignore_tf() ignore_tf(\bool $value) Default: false

 */
class FuzzyLikeThisField extends \Sherlock\components\BaseComponent implements \Sherlock\components\QueryInterface
{
    public function __construct($hashMap = null)
    {
        $this->params['field'] = null;
        $this->params['like_text'] = null;
        $this->params['max_query_terms'] = 10;
        $this->params['min_similarity'] = 0.5;
        $this->params['prefix_length'] = 3;
        $this->params['boost'] = 2.0;
        $this->params['analyzer'] = "default";
        $this->params['ignore_tf'] = false;

        parent::__construct($hashMap);
    }

    public function toArray()
    {
        $ret = array ('fuzzy_like_this_field' =>
                  array ($this->params["field"] => array(
                            'like_text' => $this->params["like_text"],
                            'max_query_terms' => $this->params["max_query_terms"],
                            'min_similarity' => $this->params["min_similarity"],
                            'prefix_length' => $this->params["prefix_length"],
                            'boost' => $this->params["boost"],
                            'analyzer' => $this->params["analyzer"],
                            'ignore_tf' => $this->params["ignore_tf"]
                        )
                  )
                );

        return $ret;
    }

}
