<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:24 PM
 * Auto-generated by "generate.php"
 * @package Sherlock\components\queries
 */
namespace Sherlock\components\queries;

use Sherlock\components;

/**
 * @method \Sherlock\components\queries\Range field() field(\string $value)
 * @method \Sherlock\components\queries\Range from() from(multi $value)
 * @method \Sherlock\components\queries\Range to() to(multi $value)
 * @method \Sherlock\components\queries\Range include_lower() include_lower(\bool $value) Default: true
 * @method \Sherlock\components\queries\Range include_upper() include_upper(\bool $value) Default: true
 * @method \Sherlock\components\queries\Range boost() boost(\float $value) Default: 1.0

 */
class Range extends \Sherlock\components\BaseComponent implements \Sherlock\components\QueryInterface
{
    public function __construct($hashMap = null)
    {
        $this->params['field'] = null;
        $this->params['from'] = 0;
        $this->params['to'] = 10;
        $this->params['include_lower'] = true;
        $this->params['include_upper'] = true;
        $this->params['boost'] = 1.0;

        parent::__construct($hashMap);
    }

    public function toArray()
    {
        $ret = array (
  'range' =>
  array (
    $this->params["field"] =>
    array (
      'from' => $this->params["from"],
      'to' => $this->params["to"],
      'include_lower' => $this->params["include_lower"],
      'include_upper' => $this->params["include_upper"],
      'boost' => $this->params["boost"],
    ),
  ),
);

        return $ret;
    }

}
