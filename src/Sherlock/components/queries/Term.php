<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:24 PM
 * Auto-generated by "generate.php"
 * @package Sherlock\components\queries
 */
namespace Sherlock\components\queries;

use Sherlock\components;

/**
 * @method \Sherlock\components\queries\Term field() field(\string $value)
 * @method \Sherlock\components\queries\Term term() term(\string $value)

 */
class Term extends \Sherlock\components\BaseComponent implements \Sherlock\components\QueryInterface
{
    public function __construct($hashMap = null)
    {
		$this->params['value'] = null;
		$this->params['term'] = null;
		$this->params['field'] = null;
		$this->params['boost'] = 1.0;
        parent::__construct($hashMap);
    }

	/**
	 * The term query accepts both "value" and "term" keywords for the query term
	 */
    public function toArray()
    {
        $ret = array (
				  'term' =>
				  		array (
							$this->params["field"] =>
								array (
								  'value' => !empty( $this->params['term'] ) ? $this->params['term'] : $this->params['value'],
								  'boost' => $this->params['boost']
								),
						  ),
				);

        return $ret;
    }

}
