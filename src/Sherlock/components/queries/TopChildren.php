<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:24 PM
 * Auto-generated by "generate.php"
 * @package Sherlock\components\queries
 */
namespace Sherlock\components\queries;

use Sherlock\components;

/**
 * @method \Sherlock\components\queries\TopChildren type() type(\string $value)
 * @method \Sherlock\components\queries\TopChildren query() query(\sherlock\components\QueryInterface $value)
 * @method \Sherlock\components\queries\TopChildren score() score(\string $value) Default: "max"
 * @method \Sherlock\components\queries\TopChildren factor() factor(\int $value) Default: 5
 * @method \Sherlock\components\queries\TopChildren incremental_factor() incremental_factor(\int $value) Default: 5

 */
class TopChildren extends \Sherlock\components\BaseComponent implements \Sherlock\components\QueryInterface
{
    public function __construct($hashMap = null)
    {
        $this->params['type'] = null;
        $this->params['query'] = null;
        $this->params['score'] = "max";
        $this->params['factor'] = 5;
        $this->params['incremental_factor'] = 5;

        parent::__construct($hashMap);
    }

    public function toArray()
    {
        $ret = array (
				  'top_children' =>
				  array (
					'type' => $this->params["type"],
					'query' => $this->params["query"]->toArray(),
					'score' => $this->params["score"],
					'factor' => $this->params["factor"],
					'incremental_factor' => $this->params["incremental_factor"],
				  ),
				);

        return $ret;
    }

}
